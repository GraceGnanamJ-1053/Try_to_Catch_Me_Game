name: Python Game Project CI-CD Pipeline

# Trigger the workflow on push to the main branch
on:
  push:
    branches: [ main ]

env:
  # --- ⚠️ ACTION REQUIRED ⚠️ ---
  # Update these values after your first Terraform run
  RESOURCE_GROUP_NAME: "pygame-resourcegroup"
  AKS_CLUSTER_NAME: "pygame-akservice"
  
  ACR_NAME: "pygameacregistry854ced4af8e4" 
  
  # Example: ACR_LOGIN_SERVER: "servername.azurecr.io"
  ACR_LOGIN_SERVER: "pygameacregistry854ced4af8e4.azurecr.io"
  
  IMAGE_NAME: "python-game"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # 1. Checkout the source code
    - name: Checkout Code
      uses: actions/checkout@v3

    # 2. Log in to Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # 3. Log in to Azure Container Registry (ACR)
    - name: Docker Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # 4. Build and Push Docker Image to ACR
    # This step finds your Dockerfile in the root and builds it
    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
    # 5. Get AKS Credentials
    - name: Set AKS Context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP_NAME }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    # 6. Replace placeholders in Kubernetes manifest
    - name: Update Kubernetes Manifests
      run: |
        sed -i 's|__ACR_LOGIN_SERVER__|${{ env.ACR_LOGIN_SERVER }}|g' ./kubernetes/deployment.yaml
        sed -i 's|__IMAGE_NAME__|${{ env.IMAGE_NAME }}|g' ./kubernetes/deployment.yaml
        sed -i 's|__TAG__|${{ github.sha }}|g' ./kubernetes/deployment.yaml
        
    # 7. Install Ansible
    - name: Install Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible
        
    # 8. Deploy to AKS using Ansible Playbook
    - name: Run Ansible Playbook
      run: ansible-playbook playbook.yaml
      working-directory: ./ansible

    # 9. Verify Deployment
    - name: Verify Kubernetes Deployment
      run: |
        echo "Waiting for pods to be ready..."
        sleep 10
        kubectl get pods
        kubectl get svc